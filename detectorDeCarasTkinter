import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
import face_recognition

def load_and_encode_image():
    file_path = filedialog.askopenfilename()
    if file_path:
        image = face_recognition.load_image_file(file_path)
        face_encodings = face_recognition.face_encodings(image)
        if len(face_encodings) > 0:
            return face_encodings[0], file_path
        else:
            print("No se encontr칩 un rostro en la imagen.")
            return None, None
    else:
        return None, None

def load_image(button, label):
    encoding, file_path = load_and_encode_image()
    if encoding is not None:
        if button == "button1":
            global encoding1
            encoding1 = encoding
        else:
            global encoding2
            encoding2 = encoding

        image = Image.open(file_path)
        image = image.resize((250, 250), Image.ANTIALIAS)
        photo = ImageTk.PhotoImage(image)
        label.config(image=photo)
        label.image = photo

def compare_faces():
    if encoding1 is not None and encoding2 is not None:
        results = face_recognition.compare_faces([encoding1], encoding2)
        if results[0]:
            result_label.config(text="Las fotos son de la misma persona.")
        else:
            result_label.config(text="Las fotos son de personas diferentes.")
    else:
        result_label.config(text="Carga ambas fotos para comparar.")

# Inicializar Tkinter
root = tk.Tk()
root.title("Comparador de Rostros")

# Variables globales para las codificaciones
encoding1 = None
encoding2 = None

# Botones para cargar im치genes
button1 = tk.Button(root, text="Cargar Foto 1", command=lambda: load_image("button1", label1))
button1.pack()

button2 = tk.Button(root, text="Cargar Foto 2", command=lambda: load_image("button2", label2))
button2.pack()

# Etiquetas para mostrar im치genes
label1 = tk.Label(root)
label1.pack()

label2 = tk.Label(root)
label2.pack()

# Bot칩n para comparar rostros
compare_button = tk.Button(root, text="Comparar", command=compare_faces)
compare_button.pack()

# Etiqueta para mostrar el resultado
result_label = tk.Label(root, text="")
result_label.pack()

root.mainloop()
